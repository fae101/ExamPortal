--create a database with the name ExamPortalDB
use ExamPortalDB;

--users
CREATE TABLE Users (
  id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  username NVARCHAR(50) NOT NULL UNIQUE,
  email NVARCHAR(100) NOT NULL UNIQUE,
  password NVARCHAR(255) NOT NULL, -- store hashed passwords!
  fullName NVARCHAR(100),
  role NVARCHAR(10) CHECK (role IN ('admin', 'student')),
  createdAt DATETIME DEFAULT GETDATE()
);

--exmas
CREATE TABLE Exams (
  id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  title NVARCHAR(100) NOT NULL,
  description NVARCHAR(MAX),
  durationMinutes INT,
  isPublished BIT DEFAULT 0,
  createdBy UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(id) ON DELETE CASCADE
);

--questions
CREATE TABLE Questions (
  id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  examId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Exams(id) ON DELETE CASCADE,
  text NVARCHAR(MAX) NOT NULL,
  options NVARCHAR(MAX) NOT NULL, -- store JSON as string
  correctIndex INT NOT NULL
);

--submissions
CREATE TABLE Submissions (
  id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  examId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Exams(id) ON DELETE NO ACTION,
  studentId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(id) ON DELETE NO ACTION,
  submittedAt DATETIME DEFAULT GETDATE(),
  result FLOAT
);

--answers
CREATE TABLE Answers (
  id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  submissionId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Submissions(id) ON DELETE CASCADE,
  questionId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Questions(id) ON DELETE CASCADE,
  selectedIndex INT NOT NULL
);